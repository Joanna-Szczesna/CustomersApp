plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'pl.szczesnaj'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '3.1.1'
	implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '3.1.1'
	implementation group: 'net.sf.supercsv', name: 'super-csv-dozer', version: '2.4.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '3.1.1'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.3'
	testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.3.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

task generateCustomersAndContacts() {
	doLast {
		File dataSql = file("src/main/resources/data.sql")
		dataSql.write("")

		for (int i = 1; i <= 9; i++) {
			dataSql.append("insert into customer(name, surname, pesel_number) " +
					"values ('Mieszko ${i}', 'Kowalski ${i}', '4204020000${i}');\n")
		}

		for (int i = 1; i <= 9; i++) {
			dataSql.append("insert into communication_methods(customer_id, email_address," +
					" residence_address, registered_address, private_phone_number, business_phone_number) " +
					"values (${i}, 'email@address${i}.com', 'residence_address ${i}', 'registered_address ${i}', " +
					" 'priva_num ${i}', 'busin_num ${i}' );\n")
		}
	}
}